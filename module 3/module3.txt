1. What is List? How will you reverse a list?
 
-> Lists are used to store multiple items in a single variable.

-> Reversing list by swapping present and last numbers at a time. Using the reversed() and
   reverse() built-in function.


2. How will you remove last object from a list? Suppose list1 is [2, 33, 222, 14, and 25], what is list1 [-1]?
  
-> To remove last object in list we use pop operation to pop or delete last object.list1[-1] in
    Python is the last element of the list. In this case, list1[-1] would be 25, the last element of the list.

3. Differentiate between append () and extend () methods?
 
->  The append() function adds the full input to the list as a single item.
    extend() adds each item to the list independently after iterating through each one in the input.


4. Write a Python function to get the largest number, smallest num and sum of all from a list.
 
-> num = [10, 5, 20, 8, 15]
   l = num[0]
   s =num[0]
   sum = 0
   for num in num:
    if num > l:
        l = num
    if num < s:
        s = num
    sum += num

   print("Largest number:", l)
   print("Smallest number:", s)
   print("Sum of all numbers:", sum)



5. How will you compare two lists?
-> sort() method sorts the two lists and the == operator compares the two lists item by item
   which means they have equal data items at equal positions.



6. Write a Python program to count the number of strings where the string length is 2 or
   more and the first and last character are same from a given list of strings.

-> s = ['level', 'hello', 'radar', 'python', 'pop', 'wow', 'ab', 'a']

   count = 0

   for i in s:
    if len(i) >= 2 and i[0] == i[-1]:
        count += 1

   print("Number of strings:", count)


7. Write a Python program to remove duplicates from a list.

-> s = ['level', 'hello', 'radar', 'python', 'pop', 'wow', 'ab', 'a']

count = 0

for i in s:
    if len(i) >= 2 and i[0] == i[-1]:
        count += 1

print("Number of strings:", count)


8. Write a Python program to check a list is empty or not.

-> l = []
   if not l:
     print("List is empty")

9. Write a Python function that takes two lists and returns true if they have at least one common member.

l1=[1,2,3,4,5]
l2=[5,6,7,8,9]
result = False
for x in l1:
for y in l2:
    if x==y:
       result = True
       print(result)
if result:
   print("List have at least one common member")
else:
   print("List do not have any commom member")


10. Write a Python program to generate and print a list of first and last 5 elements where the values are square of numbers between 1 and 30.

-> l = []
for i in range(1, 31):
    l.append(i**2)

f5 = l[:5]
l5 = l[-5:]

print("First 5 elements:", f5)
print("Last 5 elements:", l5)
print(l)

11. Write a Python function that takes a list and returns a new list with unique elements of the first list.

-> def unique_list(l):
  x=[]
  for a in l:
    if a not in x:
        x.append(a)
   return x
print(unique_list([1,2,3,3,3,4,5]))


12. Write a Python program to convert a list of characters into a string.

-> l1 = ['H', 'e', 'l', 'l', 'o']

result = ''

for i in l1:
    result += i

print("List of characters:", l1)
print("Resulting string:", result)
   
13. Write a Python program to select an item randomly from a list.

import random

my_list = ["apple", 2, "banana",54,'f', 4, "cherry", 6]
print(random.choice(my_list))
      


14. Write a Python program to find the second smallest number in a list.

->  n = [5, 2, 8, 1, 9, 3, 7, 4]

s = second_smallest = float('inf')

for i in n:
    if i < s:
        second_smallest = s
        s = i
    elif i < second_smallest and i != s:
        second_smallest = i

print("Second smallest number:", second_smallest)



15. Write a Python program to get unique values from a list

-> l = [1, 2, 3, 4, 2, 3, 5, 6, 7,8,1]

unique = []

for item in l:
    if item not in unique:
        unique.append(item)

print("Unique values:", unique)



16. Write a Python program to check whether a list contains a sub list.

-> list = [[1,5,7],[1,2,3],[6,7,8],[5,9,8]]
sub_list = [1,2,3]
if sub_list in list:
   print(" List contain sublist")
else:
   print("List not contain sublist")



17. Write a Python program to split a list into different variables.

-> l = [1, 2, 3, 4, 5]

v1, v2, v3, v4, v5 = l

print("var1:", v1)
print("var2:", v2)
print("var3:", v3)
print("var4:", v4)
print("var5:", v5)


18. What is tuple? Difference between list and tuple.
 
->Lists are mutable, which means they can be changed. The tuple is immutable, which means it cannot be changed.
  The set is mutable, which means that we can change it. However, no elements are duplicated.


19. Write a Python program to create a tuple with different data types.

-> t = ("tuple",False,3.2,1)
print(t)



20. Write a Python program to create a tuple with numbers.

-> tuple = (1,2,3,4,5)
print(tuple)


21. Write a Python program to convert a tuple to a string.

-> t = ("k","a","m","e","s","h")
str = ''.join(t)
print(str)


22. Write a Python program to check whether an element exists within a tuple.

-> t = (1, 2, 3, 4, 5)
check = 9
found = False

for item in t:
    if item == check:
        found = True
        break

if found:
    print("Element", check, "exists within the tuple.")
else:
    print("Element", check, "does not exist within the tuple.")


23. Write a Python program to find the length of a tuple.


-> t = (1, 2, 3, 4, 5)

length = len(t)

print("The length of the tuple is: {length}")


24. Write a Python program to convert a list to a tuple.

-> l = [1, 2, 3, 4, 5]
t = tuple(l)

print("Tuple:", t)


25. Write a Python program to reverse a tuple. 

-> t = (1, 2, 3, 4, 5)
reverse = t[::-1]

print("Reversed Tuple:", reverse)


26. Write a Python program to replace last value of tuples in a list.

-> l = [(10,20,30),(40,50,60),(70,80,90)]
print([t[:-1] + (100,) for t in l])


27. Write a Python program to find the repeated items of a tuple.

-> tuple = 2,4,5,6,1,2,3,4,4,7
print(tuple)
count = tuple.count(4)
print(count)


28. Write a Python program to remove an empty tuple(s) from a list of tuples.

-> L = [(),(),('',),('a','b'),('a','b','c'),('d')]
L = [t for t in L if t]
print(L)


29. Write a Python program to unzip a list of tuples into individual lists.

-> l = [(1,2),(3,4),(5,6)]
result = list(zip(*l))
print(result)


30. Write a Python program to convert a list of tuples into a dictionary.

-> l = [("x", 1), ("x", 2), ("x", 3), ("y", 1), ("y", 2), ("z", 1)]
d = {}

for a, b in l:
   d.setdefault(a, []).append(b)

print(d)


31. How will you create a dictionary using tuples in python?
->
- First, define tuples that represent the key-value pairs you want to store in the dictionary.
- Then, initialize an empty dictionary, and assign values using tuples as keys.



32. Write a Python script to sort (ascending and descending) a dictionary by value. 

-> d = {'apple': 10, 'banana': 5, 'orange': 8}

asc = dict(sorted(d.items(), key=lambda item: item[1]))
desc = dict(sorted(d.items(), key=lambda item: item[1], reverse=True))

print("Ascending order:", asc)
print("Descending order:", desc)



33. Write a Python script to concatenate following dictionaries to create a new one.

-> dic1 = {1: 10,2: 20}
dic2 = {3: 30,4: 40}
dic3 = {5: 50,6: 60}
dic4 = {}

for d in (dic1,dic2,dic3):
   dic4.update(d)

print(dic4)



34. Write a Python script to check if a given key already exists in a dictionary.

-> d = {'apple': 10, 'banana': 5, 'orange': 8}

check = 'banana'

if check in d:
    print(f"The key '{check}' exists in the dictionary with value {d[check]}.")
else:
    print(f"The key '{check}' does not exist in the dictionary.")


35. How Do You Traverse Through A Dictionary Object In Python?

-> Use the dict attribute to get a dictionary containing the object's properties and values.
-> Use the dict.items() method to get a view of the dictionary's items. 
-> Use a for loop to iterate over the object's attributes.


36. How Do You Check The Presence Of A Key In A Dictionary?

-> Using the has key() method returns true if a given key is available in the dictionary, otherwise,
it returns a false. With the Inbuilt method has key(), use the if statement to check whether the
key is present in the dictionary.


37. Write a Python script to print a dictionary where the keys are numbers between 1 and 15.

-> d = dict()

for x in range(1,16):
  d[x] = x ** 2

print(d)


38. Write a Python program to check multiple keys exists in a dictionary.

-> student = {
  'name':'taksh',
  'class':'V',
  'roll_id':'2'
 }
print(student.keys() >={'class','name'})
print(student.keys() >={'name','taksh'})
print(student.keys() >={'roll_id','name'})


39. Write a Python script to merge two Python dictionaries.

-> d1 = {'a':100,'b':200}
d2 = {'X': 300,'Y':200}
d=d1.copy()
d.update(d2)
print(d)


40. Write a Python program to map two lists into a dictionary.

-> keys = ['a', 'b', 'c']
values = [1, 2, 3]

d = {}

for key, value in zip(keys, values):
    d[key] = value

print("Mapped Dictionary:", d)


41. Write a Python program to combine two dictionary adding values for common keys.

-> dict1 = {'a': 10, 'b': 20, 'c': 30}
dict2 = {'b': 30, 'c': 40, 'd': 50}

dict3 = {}

for key in dict1.keys() | dict2.keys():
    dict3[key] = dict1.get(key, 0) + dict2.get(key, 0)

print("Combined Dictionary:",dict3)



42. Write a Python program to print all unique values in a dictionary.

-> d = {'a': 10, 'b': 20, 'c': 10, 'd': 30, 'e': 20}

unique = set(d.values())

print("Unique Values:", unique)



43. Why Do You Use the Zip () Method in Python?
   
-> Zip is an in-built function in Python used to iterate over multiple iterables.



44. Write a Python program to create and display all combinations of letters,selecting each
    letter from a different key in a dictionary. Sample data: {'1': ['a','b'],'2': ['c','d']}

-> import itertools
d = {'1': ['a', 'b'], '2': ['c', 'd']}

for combo in itertools.product(*[d[k] for k in sorted(d.keys())]):
print(''.join(combo))


45. Write a Python program to find the highest 3 values in a dictionary.

-> d = {'a': 10, 'b': 20, 'c': 30, 'd': 40, 'e': 50}

sort = sorted(d.items(), key=lambda item: item[1], reverse=True)

highest = sort[:3]

print("Highest 3 values in the dictionary:")
for key, value in highest:
    print(key, ":", value)


46. Write a Python program to create a dictionary from a string.

-> s = "taksh patel"

d = {}
for char in s:
    if char in d:
        d[char] += 1
    else:
        d[char] = 1

print("Dictionary from string:")
print(d)


47. Write a Python function to calculate the factorial of a number (a non-negative integer)

-> def factorial(n):
  if n == 0:
     return 1
  else:
    return n * factorial(n - 1)

n = int(input("Enter number to calculate factorial: "))

print(factorial(n))



48. Write a Python function to check whether a number is in a given range.

-> def range(n):
  if n in range(3, 9):
    print("%s is in the range" % str(n))
else:
    print("The number is outside the given range.")

range(5)


49. Write a Python function to check whether a number is perfect or not.

-> def number(n):
 sum=0
 for x in range(1,n):
  if n%x==0:
      sum += x
  return sum == n
print(number(6))



50. Write a Python function that checks whether a passed string is palindrome or not.

-> def Palindrome(s):
return s==s[::-1]

s = 'aba' 
ans = Palindrome(s)

if ans:
 print('yes')
else:
 print('no')


51. How Many Basic Types Of Functions Are Available In Python?

-> There are basically 2 type of functions:
1. User define function
2. Built-in functions or library function


52. How can you pick a random item from a list or tuple?

-> Create a tuple and add some dummy data to it. Generate a random item from the tuple using
   random. choice() method by passing the input tuple as an argument to the choice() function.


53. How can you pick a random item from a range?

-> Random integer values can be generated with the randint() function it represent item from a range.



54. How can you get a random number in python?

->  Random. uniform() → returns a random floating number between the two specified numbers
   (both included). random. randint() → returns a random integer number selected element from a
   range (both included). 


55. How will you set the starting value in generating random numbers?

->  Use the seed() method to customize the start number of the random number generator.


56. How will you randomizes the items of a list in place?

-> Python number method shuffle() randomizes the items of a list in place.


57. Write a Python program to read a random line from a file.

-> import random
file=open('top1','r')
print(file.read())
print('file written sucessfully')
file.close()
print('****************************')


58. Write a Python program to convert degree to radian.

-> pi=22/7
degree = float(input("Input degrees: "))
radian = degree*(pi/180)
print(radian)


59. Write a Python program to calculate the area of a trapezoid.

-> base1 = 5
base2 = 6
height = float(input("Height of trapezoid: "))
base1 = float(input('Base one value: '))
base2 = float(input('Base two value: '))
area = ((base1 + base2) / 2) * height
print("Area is:", area)



60. Write a Python program to calculate the area of a parallelogram. 

-> base = float(input('Length of base: '))
height = float(input('Measurement of height: '))
area = base * height
print("Area is: ", area)


61. Write a Python program to calculate surface volume and area of a cylinder.

-> pi=22/7
height = float(input('Height of cylinder: '))
radian = float(input('Radius of cylinder: '))
volume = pi * radian * radian * height
surface = ((2*pi*radian) * height) + ((pi*radian**2)*2)
print("Volume is: ", volume)
print("Surface Area is: ", surface)


62. Write a Python program to returns sum of all divisors of a number.

-> def div(number):
 divisors = [1]
 for i in range(2, number):
   if (number % i)==0:
      divisors.append(i)
  return sum(divisors)
print(div(8))
print(div(12))



63. Write a Python program to find the maximum and minimum numbers from the specified decimal numbers.

from decimal import *

data = list(map(Decimal, '2.45 2.69 2.45 3.45 2.00 0.04 7.25'.split()))

print("Maximum: ", max(data))
print("Minimum: ", min(data))


64. Write a Python program to combine values in python list of dictionaries. 

def combine(list_of_dicts):
    combined = []

    for d in list_of_dicts:
        combine.extend(d.values())

    return combine

data = [
    {'item': 'item1', 'amount': 400},
    {'item': 'item2', 'amount': 300},
    {'item': 'item1', 'amount': 750}
]
combine = combine(data)

print("Sample Data:")
print(data)
print("\nCombined Values:")
print(combine)